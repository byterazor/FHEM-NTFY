kind: pipeline
type: kubernetes
name: build-amd64
platform:
  arch: amd64
node_selector:
  kubernetes.io/arch: amd64
  federationhq.de/location: Blumendorf
  federationhq.de/compute: true

volumes:
- name: fedhq-ca-crt
  config_map:
    name: fedhq-ca-crt
    default_mode: 420     # same as 644 in octal, or u+w,a+r
    optional: false

steps:
  - name: generate control
    image: debian:bookworm
    pull: always
    commands:
      - apt-get -qy update && apt-get -qy install git
      - scripts/generate_control.sh

  - name: build amd64
    image: quay.io/buildah/stable
    pull: always
    privileged: true
    volumes:
    - name: fedhq-ca-crt
      path: /etc/ssl/certs2/
    commands:
      - scripts/setupEnvironment.sh
      - buildah bud -t "registry.cloud.federationhq.de/nginx-fhem-ntfy:latest-amd64"  --arch amd64 .
      - buildah push --all registry.cloud.federationhq.de/nginx-fhem-ntfy:latest-amd64
---
kind: pipeline
type: kubernetes
name: build-arm64
platform:
  arch: arm64
node_selector:
  kubernetes.io/arch: arm64
  federationhq.de/location: Blumendorf
  federationhq.de/compute: true

volumes:
- name: fedhq-ca-crt
  config_map:
    name: fedhq-ca-crt
    default_mode: 420     # same as 644 in octal, or u+w,a+r
    optional: false

steps:
  - name: generate control
    image: debian:bookworm
    pull: always
    commands:
      - apt-get -qy update && apt-get -qy install git
      - scripts/generate_control.sh

  - name: build arm64
    image: quay.io/buildah/stable
    pull: always
    privileged: true
    volumes:
    - name: fedhq-ca-crt
      path: /etc/ssl/certs2/
    commands:
      - scripts/setupEnvironment.sh
      - buildah bud -t "registry.cloud.federationhq.de/nginx-fhem-ntfy:latest-arm64" --arch arm64 .
      - buildah push --all registry.cloud.federationhq.de/nginx-fhem-ntfy:latest-arm64
---
kind: pipeline
type: kubernetes
name: push
node_selector:
  kubernetes.io/arch: amd64
  federationhq.de/location: Blumendorf
  federationhq.de/compute: true

volumes:
- name: fedhq-ca-crt
  config_map:
    name: fedhq-ca-crt
    default_mode: 420     # same as 644 in octal, or u+w,a+r
    optional: false

steps:
  - name: push
    image: quay.io/buildah/stable
    pull: always
    privileged: true
    volumes:
    - name: fedhq-ca-crt
      path: /etc/ssl/certs2/
    commands:
      - scripts/setupEnvironment.sh
      - buildah manifest create nginx-fhem-ntfy:latest registry.cloud.federationhq.de/nginx-fhem-ntfy:latest-arm64 registry.cloud.federationhq.de/nginx-fhem-ntfy:latest-amd64
      - buildah manifest push --all nginx-fhem-ntfy:latest docker://registry.cloud.federationhq.de/nginx-fhem-ntfy:latest 
      - buildah manifest rm nginx-fhem-ntfy:latest
depends_on:
  - build-amd64
  - build-arm64

---

kind: pipeline
type: kubernetes
name: mirror-to-github
node_selector:
  kubernetes.io/arch: amd64
  federationhq.de/location: Blumendorf
  federationhq.de/compute: true
steps:
  - name: github-mirror
    image: registry.cloud.federationhq.de/drone-github-mirror:latest
    pull: always
    settings:
      GH_TOKEN: 
        from_secret: GH_TOKEN
      GH_REPO: "byterazor/FHEM-NTFY"
      GH_REPO_DESC: "Module for the Homeautomation Tool fhem to send and receive notifications through ntfy.sh and self hosted instances"
      GH_REPO_HOMEPAGE: "https://rm.byterazor.de/projects/fhem-ntfy"
depends_on:
    - push

--- 
kind: secret
name: GH_TOKEN
get:
  path: github
  name: token